/* 
Fichier : Creation_GroupeG.sql
Auteur: 
Mathieu ALBIN 21812612
Nom du Groupe : G
*/

DROP DATABASE IF EXISTS BDEVENT;
CREATE DATABASE BDEVENT;
USE BDEVENT;

DROP TABLE IF EXISTS PARTICIPER;
DROP TABLE IF EXISTS EVENEMENT;
DROP TABLE IF EXISTS ADMINISTRATEUR;
DROP TABLE IF EXISTS CONTRIBUTEUR;
DROP TABLE IF EXISTS VISITEUR;
DROP TABLE IF EXISTS COMPTE;
DROP TABLE IF EXISTS THEMES;
DROP TABLE IF EXISTS LOGERROR;
/*   
Création des tables
*/

CREATE TABLE COMPTE (
	IDCOMPTE VARCHAR(25) NOT NULL,
	MDP VARCHAR(25),
	NOM VARCHAR(10),
	PRENOM VARCHAR(10),
	ADR VARCHAR(25),
	AGE NUMERIC(3,0),
	CONSTRAINT PK_COMPTE PRIMARY KEY (IDCOMPTE)
);

CREATE TABLE ADMINISTRATEUR(
	IDCOMPTE VARCHAR(25) NOT NULL,
	CONSTRAINT PK_ADMIN PRIMARY KEY (IDCOMPTE),
	CONSTRAINT FK_ADMIN_COMPTE FOREIGN KEY (IDCOMPTE) REFERENCES COMPTE(IDCOMPTE)
);

CREATE TABLE CONTRIBUTEUR (
	IDCOMPTE VARCHAR(25) NOT NULL,
	CONSTRAINT PK_CONTRIBUTEUR PRIMARY KEY (IDCOMPTE),
	CONSTRAINT FK_CONTRIBUTEUR_COMPTE FOREIGN KEY (IDCOMPTE) REFERENCES COMPTE(IDCOMPTE)
);

CREATE TABLE VISITEUR (
	IDCOMPTE VARCHAR(25) NOT NULL,
	CONSTRAINT PK_VISTEUR PRIMARY KEY (IDCOMPTE),
	CONSTRAINT FK_VISITEUR_COMPTE FOREIGN KEY (IDCOMPTE) REFERENCES COMPTE(IDCOMPTE)
);

CREATE TABLE THEMES (
	IDTHEMES NUMERIC(4,0) NOT NULL,
	LIBELLE VARCHAR(250),
	CONSTRAINT PK_THEMES PRIMARY KEY (IDTHEMES)
);

CREATE TABLE EVENEMENT (
	IDEVENEMENT NUMERIC(4,0) NOT NULL,
	DESCRIPTIF VARCHAR(500),
	AGE_MIN NUMERIC(3,0) DEFAULT 0,
	AGE_MAX NUMERIC(3,0) DEFAULT 120,
	EFFECTIF_MIN NUMERIC (4,0) DEFAULT 50,
	EFFECTIF_MAX NUMERIC (4,0) DEFAULT 3000,
	DATE_DEB DATE,
	DATE_FIN DATE,
	LOCALISATION_VILLE VARCHAR(25),
	LOCALISATION_COORD_GPS VARCHAR(250),
	IDCOMPTE VARCHAR(25) NOT NULL,
	IDTHEMES NUMERIC(4,0) NOT NULL,
	CONSTRAINT PK_EVENEMENT PRIMARY KEY (IDEVENEMENT),
	CONSTRAINT FK_EVENT_CONTRIBUTEUR FOREIGN KEY (IDCOMPTE) REFERENCES CONTRIBUTEUR(IDCOMPTE),
	CONSTRAINT FK_EVENT_THEMES FOREIGN KEY (IDTHEMES) REFERENCES THEMES(IDTHEMES)
);

CREATE TABLE PARTICIPER (
	IDEVENEMENT NUMERIC(4,0) NOT NULL,
	IDCOMPTE VARCHAR(25) NOT NULL,
	NOTE NUMERIC(2,0) ,
	CONSTRAINT PK_PARTICIPER PRIMARY KEY (IDEVENEMENT,IDCOMPTE),
	CONSTRAINT FK_PARTICIPER_EVENT FOREIGN KEY (IDEVENEMENT) REFERENCES EVENEMENT(IDEVENEMENT),
	CONSTRAINT FK_PARTICIPER_VISITEUR FOREIGN KEY (IDCOMPTE) REFERENCES VISITEUR(IDCOMPTE)
);

CREATE TABLE LOGERROR  (
  ID INT(11) AUTO_INCREMENT,
  MESSAGE VARCHAR(255) DEFAULT NULL,
  THETIME TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT PK_LOGERROR PRIMARY KEY (ID)
);	

/* 
insertion des tuples.
*/

INSERT INTO COMPTE VALUES ("a1","azer", "LEMAIRE", "Jean", "MONTPELLIER", 46);
INSERT INTO COMPTE VALUES ("a2", "tyuiop", "RENARD", "Nicole", "ROUEN", 35);
INSERT INTO COMPTE VALUES ("c1","vfgfsfgfs", "GIRAUD", "Martin", "LYON", 29);
INSERT INTO COMPTE VALUES ("c2","klghdsefnd", "DURAND", "Monique", "BORDEAUX", 32);
INSERT INTO COMPTE VALUES ("c3", "oposgjvbn", "CLEMENT", "Julien", "TOURS", 25);
INSERT INTO COMPTE VALUES ("v1","fzhfde-36fg", "NOEL","Laurent", "PARIS", 18);
INSERT INTO COMPTE VALUES ("v2","iyufgh8+t", "BLANCHARD", "Françoise","LYON", 27);
INSERT INTO COMPTE VALUES ("v3","6302jlmlkjk", "LACROIX", "Alexis", "MONTPELLIER", 23);
INSERT INTO COMPTE VALUES ("v4", "urg781uudig", "DUBOIS", "Franck", "TOULOUSE", 63);
INSERT INTO COMPTE VALUES ("v5","fre584+5grde", "LAMBERT", "Frederic", "PARIS", 45);
INSERT INTO COMPTE VALUES ("v6", "prysm6545z", "MOREAU", "Eric", "LYON", 37);
INSERT INTO COMPTE VALUES ("v7", "cxzwf512rt", "FOURNIER", "Evan", "MARSEILLE", 28);
INSERT INTO COMPTE VALUES ("v8", "g2sktt1+rng", "LEGRAND", "Patrick", "MONTPELLIER", 70);

INSERT INTO ADMINISTRATEUR VALUES ("a1");
INSERT INTO ADMINISTRATEUR VALUES ("a2");

INSERT INTO CONTRIBUTEUR VALUES ("c1");
INSERT INTO CONTRIBUTEUR VALUES ("c2");
INSERT INTO CONTRIBUTEUR VALUES ("c3");

INSERT INTO VISITEUR VALUES ("v1");
INSERT INTO VISITEUR VALUES ("v2");
INSERT INTO VISITEUR VALUES ("v3");
INSERT INTO VISITEUR VALUES ("v4");
INSERT INTO VISITEUR VALUES ("v5");
INSERT INTO VISITEUR VALUES ("v6");
INSERT INTO VISITEUR VALUES ("v7");
INSERT INTO VISITEUR VALUES ("v8");


INSERT INTO THEMES VALUES (1, "le japon");
INSERT INTO THEMES VALUES (2, "jeux vidéos");
INSERT INTO THEMES VALUES (3, "sport");
INSERT INTO THEMES VALUES (4, "art");
INSERT INTO THEMES VALUES (5, "histoire");

INSERT INTO EVENEMENT VALUES (10, "Japan Expo",DEFAULT,DEFAULT , 300, 3000, "2020-07-03","2020-07-06", "PARIS", "ZAC Paris Nord 2, 93420 Villepinte", "c1", 1);
INSERT INTO EVENEMENT VALUES (11, "Tournoi Esport League of legend",DEFAULT ,DEFAULT , 100, 1000 , "2020-01-16","2020-01-18", "LYON", "23 Rue de Bourgogne, 69009 Lyon", "c2", 2);
INSERT INTO EVENEMENT VALUES (12, "Tournoi sportif senior",60, DEFAULT , 100, 500, "2020-02-04","2020-02-04","MONTPELLIER", "1000 Avenue du Val de Montferrand, 34090 Montpellier", "c3", 3);
INSERT INTO EVENEMENT VALUES (13, "Vernissage", DEFAULT , DEFAULT , 50, 300, "2019-12-29","2019-12-29", "MONTPELLIER", "7 rue de l'argenterie", "c1", 4);
INSERT INTO EVENEMENT VALUES (14, 'Tournoi sportif etudiant de 18 à 25 ans', 18, 25, 100, 500, '2020-02-26','2020-03-01','MONTPELLIER', 'Stade philipides', 'c3',3);

INSERT INTO PARTICIPER VALUES (10, "v1", 17);
INSERT INTO PARTICIPER VALUES (11,"v2", 11);
INSERT INTO PARTICIPER VALUES (11,"v3", 12);
INSERT INTO PARTICIPER VALUES (12, "v4", 15);
INSERT INTO PARTICIPER VALUES (10, "v5" , 16);
INSERT INTO PARTICIPER VALUES (13, "v6", 06);
INSERT INTO PARTICIPER VALUES (13, "v7", 08);
INSERT INTO PARTICIPER VALUES (12, "v8", 14);
INSERT INTO PARTICIPER VALUES (14,"v1",18);
INSERT INTO PARTICIPER VALUES (14,"v3",17);


SELECT * FROM COMPTE;
SELECT * FROM COMPTE,ADMINISTRATEUR WHERE COMPTE.IDCOMPTE = ADMINISTRATEUR.IDCOMPTE; 
SELECT * FROM COMPTE,CONTRIBUTEUR WHERE COMPTE.IDCOMPTE = CONTRIBUTEUR.IDCOMPTE;
SELECT * FROM COMPTE,VISITEUR WHERE COMPTE.IDCOMPTE = VISITEUR.IDCOMPTE;
SELECT * FROM THEMES;
SELECT * FROM EVENEMENT;
SELECT * FROM PARTICIPER;


/* 
idées triggers: 
-empêcher deux évènement du même thème d'avoir lieu le même jour et dans la même ville
*/
DROP TRIGGER IF EXISTS EVENEMENT_THEMES_SIMILAIRE;

DELIMITER $$
CREATE TRIGGER EVENEMENT_THEMES_SIMILAIRE
	BEFORE INSERT ON EVENEMENT
	FOR EACH ROW
BEGIN
	IF (new.DATE_DEB IN (SELECT DATE_DEB FROM EVENEMENT))
	AND (new.IDTHEMES IN (SELECT IDTHEMES FROM EVENEMENT))
	AND (new.LOCALISATION_VILLE IN (SELECT LOCALISATION_VILLE FROM EVENEMENT))
	THEN
	INSERT INTO LOGERROR(MESSAGE) VALUES ("UN EVENEMENT DU MÊME THEMES A DEJA LIEU DANS CETTE VILLE A CETTE DATE");
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "UN EVENEMENT DU MÊME THEMES A DEJA LIEU DANS CETTE VILLE A CETTE DATE";
    END IF ;
END; $$



/*
Trigger empechant d'avoir une date de fin inférieur a la date de debut
*/
DROP TRIGGER IF EXISTS DATE_CORRECTE;

DELIMITER $$
CREATE TRIGGER DATE_CORRECTE
	BEFORE INSERT ON EVENEMENT
	FOR EACH ROW
BEGIN
	IF new.DATE_DEB > new.DATE_FIN
	THEN
	INSERT INTO LOGERROR(MESSAGE) VALUES("DATE INCORRECTE");
	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "ATTENTION LA DATE_DEB NE PEUT PAS ETRE SUPERIEUR A LA DATE_FIN";
	END IF;
	END $$
	DELIMITER ;

/*
-empêcher l'entrée dans la base d'un évènement avec un effectif minimum inférieur a 50
*/
DROP TRIGGER IF EXISTS EVENEMENT_EFFECTIF;

DELIMITER $$
CREATE TRIGGER EVENEMENT_EFFECTIF
BEFORE INSERT ON EVENEMENT
FOR EACH ROW BEGIN
IF new.EFFECTIF_MIN < 50 THEN
	INSERT INTO LOGERROR(MESSAGE) VALUES("EFFECTIF MINIMUM INSUFFISANT");
	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "UN EVENEMENT AVEC MOINS DE 50 PERSONNES N'EST PAS RENTABLE A ORGANISER";
END IF;
IF new.EFFECTIF_MAX > 3000 THEN
	INSERT INTO LOGERROR(MESSAGE) VALUES("EFFECTIF MAXIMUM DEPASSE");
	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "NOUS N'AVONS PAS D'INFRASTRUCTURE POUVANT ACCEUILLIR PLUS DE 3000 PERSONNES";
END IF;
IF new.EFFECTIF_MIN > new.EFFECTIF_MAX THEN
	INSERT INTO LOGERROR(MESSAGE) VALUES ("ERREUR DE SAISIE D'EFFECTIF");
	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "ATTENTION L'EFFECTIF MINIMUM NE PEUT PAS ÊTRE SUPERIEUR A L'EFFECTIF MAXIMUM";
END IF;
END; $$
/*
-empêcher a un visiteur de s'inscrire a un évènement avec une restriction d'âge
*/
DROP TRIGGER IF EXISTS RESTRICTION_AGE;

DELIMITER $$
CREATE TRIGGER RESTRICTION_AGE
BEFORE INSERT ON PARTICIPER
FOR EACH ROW
BEGIN
	IF ((SELECT distinct(AGE) 
		FROM COMPTE,VISITEUR,PARTICIPER 
		WHERE COMPTE.IDCOMPTE = VISITEUR.IDCOMPTE 
		AND VISITEUR.IDCOMPTE = PARTICIPER.IDCOMPTE 
		AND PARTICIPER.IDCOMPTE = new.IDCOMPTE) < (SELECT distinct(AGE_MIN) 
												   FROM EVENEMENT 
												   WHERE EVENEMENT.IDEVENEMENT = new.IDEVENEMENT))
	THEN
	INSERT INTO LOGERROR(MESSAGE) VALUES ("RESTRICTION D'AGE MINIMUM SUR L'EVENEMENT");
	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "IL Y A UNE RESTRICTION D'AGE SUR CET EVENEMENT MALHEUREUSEMENT VOUS ÊTES TROP JEUNE POUR Y PARTICIPER";
	END IF;
	IF ((SELECT distinct(AGE) 
		 FROM COMPTE,VISITEUR,PARTICIPER 
		 WHERE COMPTE.IDCOMPTE = VISITEUR.IDCOMPTE 
		 AND VISITEUR.IDCOMPTE = PARTICIPER.IDCOMPTE 
		 AND PARTICIPER.IDCOMPTE = new.IDCOMPTE) > (SELECT distinct(AGE_MAX) 
		 										    FROM EVENEMENT 
		 										    WHERE EVENEMENT.IDEVENEMENT = new.IDEVENEMENT))
	THEN
	INSERT INTO LOGERROR(MESSAGE) VALUES ("RESTRICTION D'AGE MAXIMUM SUR L'EVENEMENT");
	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "IL Y A UNE RESTRICTION D'AGE SUR CET EVENEMENT MALHEUREUSEMENT VOUS ÊTES TROP AGÉ POUR Y PARTICIPER";
	END IF;
END; $$	
/*
Trigger créé pour remplacer la contrainte chack qui ne fonctionne pas sur mysql
-
*/
DROP TRIGGER IF EXISTS DEPASSEMENT_NOTE;

DELIMITER $$
CREATE TRIGGER DEPASSEMENT_NOTE
BEFORE INSERT ON PARTICIPER
FOR EACH ROW
BEGIN 
	IF new.NOTE > 20 OR new.NOTE < 0
	THEN
	INSERT INTO LOGERROR(MESSAGE) VALUES ("ERREUR DE NOTATION");
	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "LA NOTE QUE VOUS AVEZ RENTRÉ DOIT ETRE COMPRISE ENTRE 0 ET 20";
END IF;
END; $$
DELIMITER ;


/* definition fonction appreciation */
DROP FUNCTION IF EXISTS APPRECIATION_EVENT;

DELIMITER $$
CREATE FUNCTION APPRECIATION_EVENT(IDEVENT NUMERIC(4,0))
RETURNS VARCHAR(100)
DETERMINISTIC
BEGIN
	DECLARE APPRECIATION VARCHAR(100);
	DECLARE MOYENNE NUMERIC(4,2);
	DECLARE MOYAPPR VARCHAR(100);

	SET MOYENNE = (	SELECT avg(NOTE)
					FROM PARTICIPER
					WHERE IDEVENEMENT = IDEVENT);

	IF MOYENNE >= 16 THEN
		SET APPRECIATION = " : TRES BIEN ! TOUT LE MONDE AIME CET EVENEMENT";
	ELSEIF (MOYENNE < 16 AND MOYENNE >= 13 ) THEN
		SET APPRECIATION = " : CET EVENEMENT PLAIT AU PUBLIC";
	ELSEIF (MOYENNE < 13 AND MOYENNE >= 10) THEN
		SET APPRECIATION = " : EVENEMENT CORRECTE MAIS A AMELIORER";
	ELSEIF MOYENNE < 10 THEN
		SET APPRECIATION = " : MAUVAIS EVENEMENT AMELIORATION NECESSAIRE";
	END IF;
	SET MOYAPPR = CONCAT(MOYENNE,APPRECIATION);
	RETURN (MOYAPPR);
	END; $$
	DELIMITER ;

/* definition fonction age moyen*/
DROP FUNCTION IF EXISTS AGE_MOYEN;

DELIMITER $$
CREATE FUNCTION AGE_MOYEN(IDEVENT NUMERIC(4,0))
RETURNS VARCHAR(20)
DETERMINISTIC
BEGIN
	DECLARE AGEM NUMERIC(3,0);
	SET AGEM = 	(SELECT avg(AGE)
				FROM COMPTE, VISITEUR, PARTICIPER 
				WHERE COMPTE.IDCOMPTE = VISITEUR.IDCOMPTE
				AND VISITEUR.IDCOMPTE = PARTICIPER.IDCOMPTE
				AND IDEVENEMENT = IDEVENT);
	RETURN (AGEM);
	END; $$
	DELIMITER ;

/* definition fonction statut*/
DROP FUNCTION IF EXISTS STATUT_EVENEMENT;

DELIMITER $$
CREATE FUNCTION STATUT_EVENEMENT(IDEVENT NUMERIC(4,0), JOUR DATE)
RETURNS VARCHAR(100)
DETERMINISTIC
BEGIN
	DECLARE STATUT VARCHAR(100);
		IF JOUR < (SELECT DATE_DEB FROM EVENEMENT WHERE IDEVENEMENT = IDEVENT) THEN
		SET STATUT = "A VENIR";
		ELSEIF JOUR  > (SELECT DATE_FIN FROM EVENEMENT WHERE IDEVENEMENT = IDEVENT) THEN
		SET STATUT = "TERMINÉ";
		ELSEIF JOUR >= (SELECT DATE_DEB FROM EVENEMENT WHERE IDEVENEMENT = IDEVENT) 
		AND JOUR <= (SELECT DATE_FIN FROM EVENEMENT WHERE IDEVENEMENT = IDEVENT) THEN
		SET STATUT = "EN COURS";
		END IF ;
	RETURN (STATUT);
	END $$
	DELIMITER ;